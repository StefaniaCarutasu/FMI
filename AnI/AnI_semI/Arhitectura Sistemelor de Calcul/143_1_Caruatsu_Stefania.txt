.data
	v: .word 6, 25, 13, 12, 10, 30, 26, 39, 5
	n: .word 9
	r: .word 24
	spatiu: .byte ' '
.text
main:
subu $sp, $sp, 4
la $t0, v
sw $t0, 0($sp) # push v
subu $sp, $sp, 4
lw $t0, n
sw $t0, 0($sp) # push n
subu $sp, $sp, 4
lw $t0, r
sw $t0, 0($sp) # push r
jal modif
addu $sp, $sp, 12
li $t0, 0
lw $t1, n
la $t2, v
lb $t3, spatiu
afis:
beq $t0, $t1, exit
lw $t3, 0($t2)
move $a0, $t3
li $v0, 1
syscall
move $a0, $t3
li $v0, 11
syscall
addi $t2, $t2, 4
addi $t0, $t0, 1
j afis
exit:
li $v0, 10
syscall

#modif(*v, n, r)
modif:
subu $sp, $sp, 4
sw $fp, 0($sp) # push $fp
addu $fp, $sp, 4
subu $sp, $sp, 4
sw $ra, 0($sp) # push $ra
subu $sp, $sp, 4
sw $s0, 0($sp) # push $s0
subu $sp, $sp, 4
sw $s1, 0($sp) # push $s1
subu $sp, $sp, 4
sw $s2, 0($sp) # push $s2
la $s0, 8($fp) # v
lw $s1, 4($fp) # n
lw $s2, 0($fp) # r
lw $t0, 0($s0) # v[0]
li $t1, 0
for:
beq $t1, $s1, exit_for # i<n
rem $t2, $t0, 5 #verif daca v[i] multiplu de 5
beqz $t2, suma #rest=0=>suma div
j cont
suma:
subu $sp, $sp, 4
sw $s2, 0($sp) # push r
subu $sp, $sp, 4
sw $t2, 0($sp) # push v[i]
jal suma_divizorilor_proprii
addu $sp, $sp, 8
sw $v0, 0($s0)
cont:
addi $t1, $t1, 1
addi $s0, $s0, 4
sw $t0, 0($s0)
j for
exit_for:
lw $s2, -20($fp)
lw $s1, -16($fp)
lw $s0, -12($fp)
lw $ra, -8($fp)
lw $fp, -4($fp)
addu $sp, $sp, 20
jr $ra

#suma_divizorilor_proprii(x)
suma_divizorilor_proprii:
subu $sp, $sp, 4
sw $fp, 0($sp) # push $fp
addu $fp, $sp, 4
subu $sp, $sp, 4
sw $s0, 0($sp) 
subu $sp, $sp, 4
sw $s1, 0($sp)
lw $s0, 0($fp) # v[i]
lw $s1, 4($fp) # r
li $v0, 0 # suma=0
li $t3, 2 # d=2
divu $t4, $s1, 2 #r/2
for1:
beq $t3, $t4, exit_for1
rem $t5, $s1, $t3
beqz $t5, adauga_suma # r%d==0
j continuare
adauga_suma:
addu $v0, $v0, $t3 #suma=suma+d
continuare:
addi $t3, $t3, 1
j for1
exit_for1:
lw $s1, -12($fp)
lw $s0, -8($fp)
lw $fp, -4($fp)
addu $sp, $sp, 12
jr $ra

