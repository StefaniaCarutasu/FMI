--Laborator 1
select first_name Prenume, last_name Nume, job_id
from employees
where manager_id is not NULL
order by first_name;

select last_name, salary, commission_pct
from employees
order by salary desc, commission_pct desc;

select last_name Nume
from employees
where upper(last_name) like '__A%';

select last_name
from employees
where upper(last_name) like '%L%L%' and (manager_id=102 or department_id=30);

select last_name Nume, job_id Job, salary Salariu
from employees
where (upper(job_id) like '%CLERK%' or upper(job_id) like '%REP%') and salary not in (1000, 2000, 3000);

--Laborator 2
--3.
select employee_id, last_name, department_id
from employees
where trim(UPPER(first_name))='STEVEN';

--2.
select initcap(first_name) Prenume, upper(last_name) Nume,length(last_name)"Lungime nume"
from employees
where upper(last_name) like 'M%' or upper(last_name) like 'J%' or upper(last_name) like '__A%';

--4
select employee_id Cod, last_name Nume, length(last_name)"Lungimea numelui", instr(lower(last_name), 'a') "Pozitia"
from employees
where lower(last_name) like '%e';

--Join
--16
select employee_id, department_name
from employees e join departments d on (e.department_id=d.department_id);

select employee_id, department_name
from employees e, departments d
where e.department_id=d.department_id;

select employee_id, department_name
from employees e join departments d using(department_id);

--17
select d.department_id, j.job_title
from employees e join departments d on(e.department_id=d.department_id)
                 join jobs j on(e.job_id=j.job_id)
where d.department_id=30;

--18
select e.last_name, d.department_name, d.location_id
from employees e join departments d on(e.department_id=d.department_id)
where commission_pct is not NULL;               

--19
select e.last_name, j.job_title, d.department_name
from employees e join departments d on(e.department_id=d.department_id)
                join jobs j on(e.job_id=j.job_id)
                join locations l on (d.location_id=l.location_id)
where upper(l.city)='OXFORD';

--20
select ang.employee_id Ang#, ang.last_name Angjat, mg.employee_id Mgr#, mg.last_name Manager
from employees ang, employees mg
where ang.manager_id=mg.employee_id;

--21 ????????????
select ang.employee_id Ang#, ang.last_name Angjat, mg.employee_id Mgr#, mg.last_name Manager
from employees ang, employees mg
where ang.manager_id=mg.employee_id or mg.manager_id=NULL;

--22
select ang.last_name "Nume angajat", ang.department_id, coleg.last_name "Nume colegi"
from employees ang, employees coleg
where ang.department_id=coleg.department_id
order by ang.last_name;

--23
select e.last_name, e.job_id, j.job_title, d.department_name, e.salary
from employees e full join departments d on (e.manager_id=d.manager_id)
                full join jobs j on (j.job_id=e.job_id);
--24
select e.last_name, e.hire_date
from employees e, employees g
WHERE e.hire_date > g.hire_date and g.last_name like 'Gates';

--25
select e.last_name Angajat, e.hire_date Data_ang, m.last_name Manager, m.hire_date Data_mgr
from employees e join employees m on(e.manager_id=m.employee_id)
order by m.employee_id;



--Laborator 3
--1
select e.last_name, to_char(e.hire_date, 'month YYYY')
from employees e right outer join employees g on(e.department_id=g.department_id)
where g.last_name like '%Gates%' and lower(e.last_name) like '%a%' and e.last_name != g.last_name;

--2
select emp.employee_id, emp.last_name
from employees emp join employees e on (emp.department_id=e.department_id)
where e.last_name like '%t%';

--3
select e.last_name, e.salary, j.job_title, l.city, c.country_name
from employees e join employees K on (e.manager_id=K.employee_id)
                 join jobs j on (j.job_id=e.job_id)
                 join departments d on (e.department_id=d.department_id)
                 join locations l on (d.location_id=l.location_id)
                 join countries c on (l.country_id=c.country_id)
where K.last_name like '%King%';

--4
select d.department_id, department_name, last_name, job_id, to_char(salary, '$99,999.000')
from employees e join departments d on (e.department_id=d.department_id)
where lower(department_name) like '%ti%'
order by last_name;

--6
select department_id
from employees
where lower(last_name) like '%re%' or job_id='SA_REP'
union
select department_id
from departments;

--7
select department_id
from employees
where lower(last_name) like '%re%' or job_id='SA_REP'
union all
select department_id
from departments;

--8
--v1
select department_id
from departments
minus
select department_id
from employees;
--v2
select department_id
from departments
where department_id not in(select distinct nvl(department_id, 0)
                           from employees);

--9
select department_id
from employees
where upper(job_id)='HR_REP'
intersect
select department_id
from departments
where lower(department_name) like '%re%';

--10
select last_name, hire_date
from employees
where hire_date>(select hire_date
                 from employees
                 where initcap(last_name)='Gates'); 
            
--11
select last_name, salary
from employees
where department_id in (select department_id
                        from employees
                        where initcap(last_name)='King');

--se foloseste in pentru cazul in care a subcererea returneaza mai mult de un rezultat

--12
select last_name, salary
from employees
where manager_id=(select employee_id
                  from employees
                  where manager_id is NULL);
                  
--13
select last_name, department_id, salary
from employees
where (department_id, salary) in (select department_id, salary
                                  from employees
                                  where commission_pct is not NULL);

--14
select employee_id Cod, last_name Nume, salary Salariu
from employees
where salary > (select avg(salary)
               from employees);

--15
select last_name
from employees
where salary + salary*commission_pct > (select max(salary)
                                        from employees
                                        where upper(job_id) like '%CLERK%');

--16
select last_name, department_name, salary
from employees e join departments d using (department_id)
where commission_pct is null and e.manager_id in (select employee_id
                                                  from employees
                                                  where commission_pct is not null);

--17
select last_name, department_id, salary, job_id
from employees 
where (nvl(commission_pct, -1), salary) in (select nvl(commission_pct, -1), salary
                                            from employees e join departments d on (e.department_id=d.department_id)
                                                             join locations l on (l.location_id=d.location_id)
                                            where initcap(l.city)='Oxford');
                                            
--18
select last_name, e.department_id, e.job_id
from employees e join departments d on (e.department_id=d.department_id)
where d.department_id in (select department_id
                          from departments d join locations l on (d.location_id=l.location_id)
                          where initcap(l.city)='Toronto');

--Laborator 4
--2
select max(salary) Maxim, min(salary) Minim, sum(salary) Suma, round(avg(salary)) Media
from employees;

--3
select job_id, max(salary) Maxim, min(salary) Minim, sum(salary) Suma, round(avg(salary)) Media
from employees
group by job_id;

--4
select count(employee_id), department_id
from employees
where department_id is not null
group by department_id;

--5
select distinct manager_id
from employees
where manager_id is not null;

--6
select max(salary)-min(salary) Diferenta
from employees;

--7
select count(e.employee_id) Numar_ang, d.department_name Nume_dep, d.location_id Locatie, avg(e.salary) Salariu_mediu
from employees e join departments d on (e.department_id=d.department_id)
group by d.department_name, d.location_id;

--8
select employee_id, first_name, last_name
from employees
where salary>(select avg(salary) from employees)
order by salary desc;

--9. Pentru fiecare sef, sa se afiseze codul sau si salariul celui mai prost platit subordonat.
--Se vor exclude cei pentru care codul managerului nu este cunoscut. De asemenea, se vor
--exclude grupurile în care salariul minim este mai mic de 1000$. Sortati rezultatul în ordine
--descrescatoare a salariilor.
select manager_id, min(salary)
from employees
where manager_id is not null
group by manager_id
having min(salary)>=1000
order by 2 desc;

--10
select d.department_id, department_name, max(salary)
from employees e join departments d on (e.department_id=d.department_id)
group by d.department_id, department_name
having max(salary)>=3000;

--11
select min(avg(salary))
from employees
group by job_id;

--12
select round(max(avg(salary)))
from employees
group by department_id;

--13
select job_id, job_title, avg(salary)
from employees join jobs using(job_id)
group by job_id, job_title
having avg(salary)=(select min(avg(salary))
                    from employees
                    group by job_id);

--14
select avg(salary)
from employees
having avg(salary)>=2500;

--15
select department_id, job_id, sum(salary)
from employees
group by department_id, job_id;

--16
--a
select d.department_id, department_name, count(employee_id)
from employees e join departments d on (e.department_id=d.department_id)
group by d.department_id, department_name
having count(employee_id)<4;
--b
select d.department_id, department_name, count(employee_id)
from employees e join departments d on (e.department_id=d.department_id)
group by d.department_id, department_name
having count(employee_id)=(select max(count(employee_id))
                           from employees
                           group by department_id);

--17 !!!!!!
select first_name, last_name
from employees
where to_char(hire_date, 'day')=to_char((select max(count(to_char(hire_date, 'day')))
                                from employees
                                group by to_char(hire_date, 'day')));

--18
select count(department_id)
from employees
having count(*)>15;
     
--19
select department_id, sum(salary) 
from employees
group by department_id
having count(*)>10 and department_id != 30;

--20 ??????????????
select first_name, last_name
from job_history j join employees e on (e.employee_id=j.employee_id)
group by j.employee_id, first_name, last_name
having count(j.employee_id)>2;

--21
select avg(commission_pct)
from employees; --0.22
SELECT AVG(commission_pct)
FROM employees; --0.22
SELECT SUM(commission_pct)/COUNT(*)
FROM employees; --0.07

--22
--v1
select job_id, sum(decode(department_id, 30, salary)) Dep30,
               sum(decode(department_id, 50, salary)) Dep50,
               sum(decode(department_id, 80, salary)) Dep80,
               sum(salary) Total
from employees
group by job_id;

--v2
SELECT job_id, (SELECT SUM(salary)
FROM employees
WHERE department_id = 30
AND job_id = e.job_id) Dep30,
(SELECT SUM(salary)
FROM employees
WHERE department_id = 50
AND job_id = e.job_id) Dep50,
(SELECT SUM(salary)
FROM employees
WHERE department_id = 80
AND job_id = e.job_id) Dep80,
SUM(salary) Total
FROM employees e
GROUP BY job_id;

--23
select count(employee_id) Total,
       count(decode(to_char(hire_date, 'yyyy'), '1997', employee_id)) "1997",
       count(decode(to_char(hire_date, 'yyyy'), '1998', employee_id)) "1998",
       count(decode(to_char(hire_date, 'yyyy'), '1999', employee_id)) "1999",
       count(decode(to_char(hire_date, 'yyyy'), '2000', employee_id)) "2000"
from employees;

--24
select d.department_id, department_name, a.suma
from departments d, (select department_id, sum(salary) suma
                    from employees
                    group by department_id) a
where d.department_id=a.department_id;

--25
select d.department_id, department_name, a.average
from departments d, (select department_id, avg(salary) average
                     from employees
                     group by department_id) a
where d.department_id=a.department_id;

--26
select last_name, salary, department_id averageSalary, noEmployees
from employees join (select round(avg(salary)) averageSalary, department_id, count(employee_id) noEmployees
                    from employees
                    group by department_id)
using(department_id);

--lab 5
--0a
select last_name, salary, department_id
from employees e
where salary > (select avg(salary)  
                from employees
                where department_id=e.department_id);
--0b
select last_name, salary, e.department_id, department_name, sal_med, nr_sal
from employees e, departments d, (select department_id, avg(salary) sal_med, count(*) nr_sal
                                from employees
                                group by department_id) ac
where e.department_id=d.department_id and d.department_id=ac.department_id and salary>(Select avg(salary) from employees where department_id=e.department_id);


--1
select last_name, salary
from employees 
where salary > all(select avg(salary)
                   from employees
                   group by department_id);

select last_name, salary
from employees 
where salary > (select max(avg(salary))
                   from employees
                   group by department_id);
--2
select last_name, salary, department_id
from employees e
where salary = (select min(salary)
                 from employees
                 where department_id=e.department_id);
SELECT last_name, salary, department_id
FROM employees
WHERE (department_id, salary) IN (SELECT department_id, MIN(salary)
 FROM employees
 GROUP BY department_id);
 
--3 Sa se obtina numele salariatilor care lucreaza intr-un departament in care exista cel putin 1
--angajat cu salariul egal cu salariul maxim din departamentul 30.

select last_name
from employees e
where (select count(salary)
       from employees 
       where salary=(select max(salary)
                     from employees
                     where department_id=30) and e.department_id=department_id)>=1;
                    
--4
select last_name, salary
from employees
where rownum < 4
order by salary desc;

--5
select employee_id, last_name, first_name
from employees e
where (select count(employee_id)
       from employees
       where manager_id=e.employee_id) >= 2;

--6
select location_id
from departments
where location_id in (select location_id
                      from departments
                      where department_id is not null)
group by location_id;                     
    
--7
select department_id, department_name
from departments d
where not exists (select 'x'
                  from employees
                  where department_id=d.department_id);
                  
select department_id, department_name
from departments d
where department_id not in (select department_id
                            from employees
                            where department_id=d.department_id);

--8
WITH val_dep AS (SELECT department_name, SUM(salary) AS total
 FROM departments d join employees e ON (d.department_id = e.department_id)
 GROUP BY department_name
 ),
val_medie AS (SELECT SUM(total)/COUNT(*) AS medie
 FROM val_dep)
SELECT *
FROM val_dep
WHERE total > (SELECT medie
FROM val_medie)
ORDER BY department_name;

--9
with angajati as (select employee_id, first_name, last_name, hire_date 
                  from employees e
                  where (select last_name
                         from employees
                         where e.manager_id=employee_id) like "King" and (select first_name
                                                                          from employees
                                                                          where e.manager_id=employee_id) like "Steven")
                 )
select *
from angajati
where to_char(hire_date, 'yyyy') not like '1970';


--10
select first_name, last_name, salary
from employees
where rownum<11
order by salary;

--11
select department_name, case 
                            when manager_id is null then 'Nimeni'
                            else to_char(manager_id)
                        end "Manager",
                        (select count (employee_id)
                         from employees
                         where department_id = d.department_id)as Nr_ang
                        
from departments d;                                                   

--12
select last_name, first_name, length(last_name)
from employees
where nullif(length(last_name), length(first_name)) is not null;

--13
select last_name, hire_date, salary, case to_char(hire_date, 'yyyy')
                                            when '1989' then salary * 1.20
                                            when '1990' then salary * 1.15
                                            when '1991' then salary * 1.10
                                            else salary
                                    end "Salariu cu marire"
from employees;                                    

--14
select sum(salary) 
from employees e join jobs j on (e.job_id=j.job_id)
where upper(j.job_title) like 'S%'
union
select avg(salary)
from employees
where job_id = ( select job_id
                from employees
                where salary = (select max(salary) from employees))
union
select min(salary)
from employees
where job_id != ( select job_id
                from employees
                where salary = (select max(salary) from employees))
group by job_id;


--Laborator 7
create table employees_SCA as
select employee_id, department_id, first_name, last_name
from employees;

alter table employees_SCA add constraint Pk_emp_sca primary key(employee_id);

desc employees_sca;

create table dept_sca as select*from departments;

alter table dept_SCA add constraint Pk_dept_sca primary key(department_id);

alter table employees_sca add constraint fk_emp_dept_sca foreign key(department_id) references dept_sca(department_id);

insert into dept_sca (department_id, department_name)
values (300, 'Programare');

insert into employees_sca(employee_id, last_name, department_id)
values(207, 'Carutasu', 300);

drop table employees_sca;
create table emp_sca as (select * from employees);
alter table emp_SCA add constraint Pk_emp_sca primary key(employee_id);
alter table emp_sca add constraint fk_emp_dept_sca foreign key(department_id) references dept_sca(department_id);
select job_id from emp_sca;
insert into emp_sca(employee_id, last_name, department_id, email, hire_date, job_id)
values(207, 'Carutasu', 300, 'carutasu@yahoo.com', to_date('17.06.2020', 'dd.mm.yyyy'),'IT_PROG' );

commit;

update emp_sca set salary=20000
where employee_id=207;
commit;

--8
INSERT INTO emp_sca (employee_id, last_name, email, hire_date, job_id, salary,
 commission_pct)
VALUES (252, 'Nume252', 'nume252@emp.com',SYSDATE, 'SA_REP', 5000, NULL);
SELECT employee_id, last_name, email, hire_date, job_id, salary, commission_pct
FROM emp_sca
WHERE employee_id=252;
rollback;

INSERT INTO
 (SELECT employee_id, last_name, email, hire_date, job_id, salary,
 commission_pct
 FROM emp_pnu)
VALUES (252, 'Nume252', 'nume252@emp.com',SYSDATE, 'SA_REP', 5000, NULL);
SELECT employee_id, last_name, email, hire_date, job_id, salary, commission_pct
FROM emp_pnu
WHERE employee_id=252;
rollback;

--9
INSERT INTO (SELECT employee_id, last_name, hire_date, job_id, email
 FROM emp_sca)
 VALUES ( (SELECT max(employee_id) + 1
 FROM emp_sca
 ), 'nume_nou', sysdate, 'sa_man', 'email@pnu.com'
 );

SELECT * FROM emp_sca;
ROLLBACK;

drop table emp1_sca;
--9
create table emp1_sca as (select first_name, last_name, commission_pct from employees where commission_pct >= 0.25);
select* from emp1_sca;

--10
INSERT INTO emp_sca
 SELECT 0,USER,USER, 'TOTAL', 'TOTAL',SYSDATE,
 'TOTAL', SUM(salary), ROUND(AVG(commission_pct)), null, null
 FROM employees;

select * from emp_sca;

rollback;

create table emp_sca2 as (select * from employees where salary > 5000 and salary < 10000);
drop table emp_sca2;
create table emp2_sca as (select * from employees where salary > 5000 and salary < 10000);
create table emp_sca3 as (select * from employees where salary > 10000);
drop table emp_sca3;
create table emp3_sca as (select * from employees where salary > 10000);

delete from emp1_sca;

drop table emp1_sca;

create table emp1_sca as (select * from employees where commission_pct>=0.25);
delete from emp1_sca;
insert into emp1_sca (select * from employees where salary < 5000);

create table emp0_sca as 
(select * from employees where department_id=80);

delete from emp1_sca;
delete from emp2_sca;
delete from emp3_sca;

insert into emp1_sca(select * from employees where department_id != 0 and salary < 5000);
delete from emp1_sca;
commit;

insert into emp1_sca(select * from employees where department_id != 80 and salary < 5000);
rollback;
delete from emp0_sca;
INSERT FIRST
WHEN department_id = 80 THEN
INTO emp0_sca
 WHEN salary < 5000 THEN
 INTO emp1_sca
 WHEN salary > = 5000 AND salary <= 10000 THEN
 INTO emp2_sca
 ELSE
 INTO emp3_sca
SELECT * FROM employees;
SELECT * FROM emp0_sca;
SELECT * FROM emp1_sca;
SELECT * FROM emp2_sca;
SELECT * FROM emp3_sca;

--update
--14
update emp_sca
set salary=salary+5/100*salary;

select last_name, salary from emp_sca;
rollback;

--15
update emp_sca
set job_id='SA_REP'
where department_id=80 and commission_pct is not null;

select department_id, job_id from emp_sca;

rollback;

--16
update emp_sca e
set salary=salary+1000
where lower(last_name) like '%grant%' and lower(first_name) like '%douglas%';

rollback;

--17
update emp_sca e
set (salary, commission_pct) = (select salary, commission_pct
                                from emp_sca
                                where employee_id=e.manager_id)
where salary = (select min(salary)
                from emp_sca);

rollback;

--18
update emp_sca e
set email = concat(substr(last_name,1,1), case when first_name is null then '.' else first_name end)
where salary = (select max(salary)
                from emp_sca
                where department_id=e.department_id);

select email from emp_sca e
where salary = (select max(salary)
                from emp_sca
                where department_id=e.department_id);


--19
update emp_sca e
set salary = (select avg(salary) from emp_sca)
where hire_date = (select min(hire_date) from emp_sca where department_id=e.department_id);


--delete
--21
delete from dept_sca s
where (select count(employee_id)
       from emp_sca 
       where department_id=s.department_id) = 0;

--22
insert into dept_sca (department_id, department_name)
values(267, 'Vanzari');
select * from dept_sca
where department_id=267;
rollback;

--23
savepoint p;

--24
delete from dept_sca
where department_id between 160 and 200;

select * from dept_sca;

--25
rollback to p;
commit;

--lab 8
select * from user_constraints
where lower(table_name)='emp_sca';

--select * from user_updatable_columns; -->la view
rename emp_sca to emp_stca;

rollback;
select * from emp_stca;
rename emp_stca to emp_sca;

select * from user_tables
where lower(table_name) like '%sca';

--1
create table angajati_sca (
cod_ang number(4),
nume varchar2(20) not null,
prenume varchar2(20),
email char(15),
data_ang date default sysdate,
job varchar2(10),
cod_sef number(4),
salariu number(8, 2) not null,
cod_dep number(2));
desc angajati_sca;

--2
insert into angajati_sca(cod_ang, nume, prenume, email, data_ang, job, cod_sef, salariu, cod_dep)
values(100, 'Nume1', 'Prenume1', null, null, 'Director', null, 20000, 10);
rollback;
select * from angajati_sca;

insert into angajati_sca
values
(101, 'Nume2', 'Prenume2', 'Nume2', to_date('02-02-2004', 'dd-mm-yyyy'), 'Inginer', 100, 10000, 10);
insert into angajati_sca
values(102, 'Nume3', 'Prenume3', 'Nume3', to_date('05-06-2000', 'dd-mm-yyyy'), 'Analist', 101, 5000, 20);

rollback;
savepoint p;
delete from angajati_sca
where cod_ang=102;
insert into angajati_sca (cod_ang, nume, prenume, email, data_ang, job, cod_sef, salariu, cod_dep)
values(103, 'Nume4', 'Prenume4', null, null, 'Inginer', 100, 9000, 20);
insert into angajati_sca
values(104, 'Nume5', 'Prenume5', 'Nume5', null, 'Analist', 101, 3000, 30);
rollback to p;

select * from angajati_sca;
delete from angajati_sca;

--3
alter table angajati_sca
add comision number(4,2);

--5
alter table angajati_sca
modify salariu default 0;

--6
alter table angajati_sca
modify comision number(2,2) modify salariu number(10,2);

--7
update angajati_sca
set comision=0.1
where upper(job) like 'A%';

--8
alter table angajati_sca
modify email varchar2(200);

--9
alter table angajati_sca
add nr_telefon varchar2(10) default 0;

--10
select * from angajati_sca;

alter table angajati_sca
drop column nr_telefon;

--11
create table departamente_sca(
cod_dep number(2),
nume varchar2(15) not null,
cod_director number(4));

desc departamente_sca;

--12
insert into departamente_sca
values (10, 'Administrativ', 100);
insert into departamente_sca
values (20, 'Proiectare', 101);
insert into departamente_sca
values (30, 'Programare', null);

--13
alter table departamente_sca
add constraint dep_pk primary key(cod_dep);

desc departamente_sca;

alter table angajati_sca
add constraint ang_fk_depId FOREIGN key(cod_dep) REFERENCES departamente_sca(cod_dep);

create table angajati1_sca
(cod_ang number(4) primary key,
 nume varchar2(20) constraint nume_sca not null,
 prenume varchar2(20),
 email char(15),
 data_ang date default sysdate,
 job varchar2(10),
 cod_sef number(4),
 salariu number(8, 2) constraint salariu_sca not null,
 cod_dep number(2),
 comision number(2,2),
 constraint nume_prenume_unique_sca unique(nume,prenume),
 constraint verifica_sal_sca check(salariu > 100*comision),
 unique(email),
 constraint sef_pnu foreign key(cod_sef) references angajati_sca(cod_ang),
 constraint fk_dep_pnu foreign key(cod_dep) references departamente_sca (cod_dep),
 check(cod_dep > 0)
 );

alter table angajati_sca
add constraint pk_ang primary key(cod_ang);

--16

insert into angajati1_sca (cod_ang, nume, prenume, email, data_ang, cod_sef, salariu, cod_dep, comision)
values
(101, 'Nume2', 'Prenume2', 'Nume2', to_date('02-02-2004', 'dd-mm-yyyy'), null, 10000, 10, 0.1);
insert into angajati1_sca
values(102, 'Nume3', 'Prenume3', 'Nume3', to_date('05-06-2000', 'dd-mm-yyyy'), 'Analist', 100, 5000, 20, 0.1);

select * from angajati1_sca;
--17
SELECT * FROM tab;
SELECT table_name FROM user_tables;

--18
--a
SELECT constraint_name, constraint_type, table_name
FROM user_constraints
WHERE lower(table_name) IN ('angajati_sca', 'departamente_sca');

--b
SELECT constraint_name, table_name, column_name
FROM user_cons_columns
WHERE lower(table_name) IN ('angajati_sca', 'departamente_sca');

--19
alter table angajati1_sca
modify email not null;

--20
desc angajati1_sca;
insert into angajati1_sca (cod_ang, nume, email, salariu)
values((select max(cod_ang) from angajati1_sca) + 1, 'Carutasu', 'carutasu', 20000);

--21
insert into departamente_sca
values(60, 'Analiza', null);
commit;

--22
delete from departamente_sca
where cod_dep=20;

--23
delete from departamente_sca
where cod_dep=60;
select * from departamente_sca;
rollback;

--24
SELECT constraint_name, constraint_type, table_name
FROM user_constraints
WHERE lower(table_name) IN ( 'angajati1_sca');
alter table angajati1_sca
drop constraint FK_DEP_PNU;

alter table angajati1_sca
add constraint fk_dep foreign key(cod_dep) references departamente_sca(cod_dep) on delete cascade;

--25
commit;
delete from departamente_sca
where cod_dep=20;
select * from angajati1_sca;
alter table angajati1_sca
rename to ang_sca;
commit;

desc departamente_sca;
